import dbi from '../dbi.mjs';
import faker from 'faker';
import { Address, Ride, Rider, Stop, User } from '../../models/index.mjs';

(async () => {
  await dbi.sync();

  faker.seed(2);

  for (let i = 1; i <= 50; i++) {
    await Address.create({
      id: i,
      label: faker.company.companyName(),
      address: faker.address.streetAddress(),
      latitude: faker.random.arrayElement([
        -32.93448125240672,
        -32.93292343681376,
        -32.932592791426906,
        -32.93199818942146,
        -32.92990312116245,
        -32.92930315426278,
        -32.928977,
        -32.92890411211113,
        -32.928787,
        -32.928782541789026,
        -32.928694,
        -32.9285235,
        -32.928347194844,
        -32.928305,
        -32.928227,
        -32.92820029642571,
        -32.92816905937428,
        -32.92812191544295,
        -32.92803848275158,
        -32.92798022975645,
        -32.927953,
        -32.9278886,
        -32.9278513413507,
        -32.9277998,
        -32.92779196256784,
        -32.92776353953446,
        -32.9277359,
        -32.9277232,
        -32.927692059786374,
        -32.92758849847411,
        -32.927485,
        -32.9274154,
        -32.9273026,
        -32.927257,
        -32.927233,
        -32.92717509626708,
        -32.927125,
        -32.92709123363679,
        -32.92703635704038,
        -32.92699864694927,
        -32.9269711,
        -32.9268777,
        -32.926872,
        -32.92683598681984,
        -32.92668,
        -32.92661282113839,
        -32.92651713832828,
        -32.926500815956224,
        -32.9264716,
        -32.926403725922285,
        -32.926362,
        -32.926279,
        -32.92626442264401,
        -32.92626104559211,
        -32.92619181599991,
        -32.92617718209542,
        -32.92613356178886,
        -32.926075,
        -32.926048,
        -32.925997072303645,
        -32.925968085849775,
        -32.92595401475224,
        -32.925952,
        -32.9259518,
        -32.92595,
        -32.92594472782664,
        -32.92592,
        -32.925848,
        -32.92584116446908,
        -32.925832158953995,
        -32.92563319312132,
        -32.92555580176426,
        -32.925535820711985,
        -32.92550824122397,
        -32.925408,
        -32.925402,
        -32.9253487,
        -32.9251234,
        -32.92491725012934,
        -32.92481058988747,
        -32.90294871867475,
        -32.90195756879867,
      ]),
      longitude: faker.random.arrayElement([
        151.67223572731018,
        151.6742765530944,
        151.75819113850594,
        151.7597265,
        151.76000967621803,
        151.760433,
        151.76054041832685,
        151.76072783768177,
        151.760917,
        151.76113788038492,
        151.761156,
        151.76130719482896,
        151.76133401691914,
        151.7613460868597,
        151.76141548901796,
        151.761439,
        151.76148053258657,
        151.76156,
        151.7615656927228,
        151.7615659,
        151.761566,
        151.761569,
        151.761706,
        151.76283806562424,
        151.7632838,
        151.76397800445557,
        151.76438234746456,
        151.7649831622839,
        151.76532547920942,
        151.7657421,
        151.76596149802208,
        151.7661716,
        151.76619820296762,
        151.76642317324877,
        151.766427,
        151.7667192220688,
        151.77160151302814,
        151.7723324149847,
        151.77328895777464,
        151.77370604127645,
        151.773903,
        151.77420392632484,
        151.774538,
        151.77458077669144,
        151.777027,
        151.77742157131433,
        151.778816,
        151.77926693111658,
        151.7795318,
        151.7802386,
        151.780307,
        151.7808,
        151.78111597895622,
        151.781147,
        151.7817402,
        151.78204268217087,
        151.78245842456818,
        151.7825855,
        151.7826673015952,
        151.783767,
        151.783894,
        151.784408,
        151.7850301,
        151.78549971431494,
        151.786432,
        151.7866101488471,
        151.786812,
        151.7880457,
        151.78841192275286,
        151.7890828102827,
        151.7892663,
        151.7894358560443,
        151.7894494309047,
        151.789614,
        151.79009567946196,
        151.79029282182455,
        151.7905268445611,
        151.7905479669571,
        151.7907189,
        151.7915477603674,
        151.79178144782782,
        151.79246574640277,
      ]),
    });
  }

  for (let i = 1; i <= 10; i++) {
    await User.create({
      id: i,
      username: faker.internet.userName(),
      email: faker.internet.email(),
      firstName: faker.name.firstName(),
      lastName: faker.name.lastName(),
    });
  }

  for (let i = 1; i <= 10; i++) {
    await Ride.create({
      id: i,
      startTime: faker.random.arrayElement([faker.date.recent(), faker.date.soon()]),
      endTime: faker.random.arrayElement([faker.date.recent(), faker.date.soon()]),
    });
  }

  for (let i = 1; i <= 10; i++) {
    await Stop.create({
      id: i,
      type: faker.random.arrayElement(['departure', 'arrival']),
      time: faker.date.soon(),
      addressId: faker.random.number({ min: 1, max: 50 }),
      rideId: faker.random.number({ min: 1, max: 10 }),
    });
  }

  for (let i = 1; i <= 5; i++) {
    await Rider.create({
      id: i,
      profile: 'passenger',
      userId: faker.random.number({ min: 1, max: 10 }),
      rideId: faker.random.number({ min: 1, max: 10 }),
    });
  }
})();
